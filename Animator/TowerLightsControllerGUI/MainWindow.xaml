<Window x:Class="TowerLightsControllerGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewmodel="clr-namespace:TowerLightsControllerGUI.ViewModel"
        xmlns:extToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended"
        xmlns:controls="clr-namespace:TowerLightsControllerGUI.Controls"
        Title="TowerLights Controller" Height="350" Width="713">
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <controls:FrameViewer Grid.Row="2" Frame="{Binding Source={StaticResource MainViewModel}, Path=FrameShowing}"/>

        <Menu Grid.Row="0" Grid.ColumnSpan="4">
            <MenuItem Header="File">
                <MenuItem Header="Upload Animation..." Command="{Binding Source={StaticResource MainViewModel}, Path=UploadCommand}" />
                <MenuItem Header="Exit" Command="{Binding Source={StaticResource MainViewModel}, Path=ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Animations">
                <MenuItem Header="Upload" Command="{Binding Source={StaticResource MainViewModel}, Path=UploadCommand}" />
                <Separator />
                <MenuItem Header="Play" Command="{Binding Source={StaticResource MainViewModel}, Path=PlayPauseCommand}" />
                <MenuItem Header="Stop" Command="{Binding Source={StaticResource MainViewModel}, Path=StopCommand}" />
            </MenuItem>
        </Menu>

        <ToolBarTray Grid.ColumnSpan="4" Grid.Row="1" >
            <ToolBar>
                <ToolBar.Items>
                    <Button Command="{Binding Source={StaticResource MainViewModel}, Path=UploadCommand}">
                        <Image Width="16" Height="16" Source="/TowerLightsControllerGUI;component/Images/openHS.png" Style="{StaticResource toolbarImageStyle}" />
                    </Button>
                    <Separator />
                    <Button Command="{Binding Source={StaticResource MainViewModel}, Path=PlayPauseCommand}">
                        <Image Width="16" Height="16" >
                            <Image.Style>
                                <Style TargetType="{x:Type Image}" BasedOn="{StaticResource toolbarImageStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={StaticResource MainViewModel}, Path=PlayingStatus}" Value="Playing">
                                            <Setter Property="Source" Value="/TowerLightsControllerGUI;component/Images/PauseHS.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Source={StaticResource MainViewModel}, Path=PlayingStatus}" Value="Stopped">
                                            <Setter Property="Source" Value="/TowerLightsControllerGUI;component/Images/PlayHS.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Source={StaticResource MainViewModel}, Path=PlayingStatus}" Value="Paused">
                                            <Setter Property="Source" Value="/TowerLightsControllerGUI;component/Images/PlayHS.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Command="{Binding Source={StaticResource MainViewModel}, Path=StopCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={StaticResource ResourceKey=MainViewModel}, Path=PlayingStatus}" Value="Stopped">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Source={StaticResource ResourceKey=MainViewModel}, Path=PlayingStatus}" Value="Playing">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Source={StaticResource ResourceKey=MainViewModel}, Path=PlayingStatus}" Value="Paused">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Image Width="16" Height="16" Source="/TowerLightsControllerGUI;component/Images/StopHS.png" Style="{StaticResource toolbarImageStyle}" />
                    </Button>
                </ToolBar.Items>
            </ToolBar>
        </ToolBarTray>

        <GroupBox Grid.Row="2" Grid.Column="1">
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Uploaded Animations" Margin="0,0,5,0"/>
                    <Button Command="{Binding Source={StaticResource MainViewModel}, Path=RefreshAnimationListCommand}">
                        <Image Source="/TowerLightsControllerGUI;component/Images/112_RefreshArrow_Green_16x16_72.png" Width="16" Height="16" />
                    </Button>
                </StackPanel>
            </GroupBox.Header>
                <ListBox x:Name="AnimationListBox" Margin="0,5,0,0"
                     ItemsSource="{Binding Source={StaticResource MainViewModel}, Path=Animations}"
                     SelectedItem="{Binding Source={StaticResource MainViewModel}, Path=SelectedAnimation}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding Path=Name}" FontSize="14" FontWeight="Bold" />
                                <TextBlock Text="{Binding Path=Author}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
        </GroupBox>
        <GroupBox Grid.Row="2" Grid.Column="2">
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Server Options" Margin="0,0,5,0"/>
                    <Button Command="{Binding Source={StaticResource MainViewModel}, Path=RefreshAnimationListCommand}">
                        <Image Source="/TowerLightsControllerGUI;component/Images/112_RefreshArrow_Green_16x16_72.png" Width="16" Height="16" />
                    </Button>
                </StackPanel>
            </GroupBox.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                    
                <TextBlock Grid.Row="0"  Grid.Column="0" Text="Address" VerticalAlignment="Center" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Source={StaticResource MainViewModel}, Path=ServerAddress, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Port" VerticalAlignment="Center" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Source={StaticResource MainViewModel}, Path=ServerPort, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="2" Grid.Column="0" Text="COM Port" VerticalAlignment="Center" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Source={StaticResource MainViewModel}, Path=ServerCOMPort, UpdateSourceTrigger=PropertyChanged}" />
                <CheckBox Grid.Row="3" Grid.ColumnSpan="2" IsChecked="{Binding Source={StaticResource MainViewModel}, Path=IsServerSeriallyConnected}" 
                          VerticalAlignment="Center" Margin="5,0,0,0" IsEnabled="{Binding Source={StaticResource MainViewModel}, Path=IsServerSeriallyConnected}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={StaticResource MainViewModel}, Path=IsServerSeriallyConnected}" Value="Tr">
                                    
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={StaticResource MainViewModel}, Path=IsServerSeriallyConnected}" Value="True">
                                        <Setter Property="Text" Value="Yes" />
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Source={StaticResource MainViewModel}, Path=IsServerSeriallyConnected}" Value="False">
                                        <Setter Property="Text" Value="No" />
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </CheckBox>
            </Grid>
        </GroupBox>
        <extToolkit:BusyIndicator Grid.ColumnSpan="3" Grid.RowSpan="4" IsBusy="{Binding Source={StaticResource MainViewModel}, Path=IsBusy}"/>
    </Grid>
</Window>
